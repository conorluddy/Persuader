import { z } from 'zod/v4';

/**
 * Schema for creative story generation
 *
 * Defines the structure for short stories generated by local LLMs,
 * focusing on creative writing elements and narrative structure.
 */
export const StorySchema = z.object({
  title: z.string().describe('A compelling title for the story'),

  genre: z
    .string()
    .describe('The primary genre (e.g., fantasy, sci-fi, mystery, romance)'),

  wordCount: z
    .number()
    .min(50)
    .max(1000)
    .describe('Approximate word count of the story'),

  setting: z
    .object({
      location: z.string().describe('Where the story takes place'),
      timeframe: z
        .string()
        .describe(
          'When the story occurs (past, present, future, or specific time)'
        ),
      atmosphere: z.string().describe('The mood and feeling of the setting'),
    })
    .describe("The story's setting details"),

  characters: z
    .array(
      z.object({
        name: z.string().describe("Character's name"),
        role: z
          .string()
          .describe(
            'Their role in the story (protagonist, antagonist, supporting)'
          ),
        description: z.string().describe('Brief character description'),
      })
    )
    .min(1)
    .max(5)
    .describe('Main characters in the story'),

  plot: z
    .object({
      premise: z.string().describe('The basic setup or situation'),
      conflict: z.string().describe('The main problem or challenge'),
      resolution: z.string().describe('How the conflict is resolved'),
    })
    .describe("The story's plot structure"),

  themes: z
    .array(z.string())
    .min(1)
    .max(3)
    .describe('Central themes explored in the story'),

  story: z.string().min(200).describe('The complete story text'),

  writingStyle: z
    .object({
      perspective: z
        .enum([
          'first-person',
          'third-person-limited',
          'third-person-omniscient',
        ])
        .describe('Narrative perspective'),
      tone: z
        .string()
        .describe(
          'The overall tone (e.g., whimsical, dark, hopeful, mysterious)'
        ),
      pacing: z
        .enum(['fast', 'moderate', 'slow', 'varied'])
        .describe('Story pacing'),
    })
    .describe('Writing style characteristics'),
});

export type Story = z.infer<typeof StorySchema>;

/**
 * Schema for story generation prompts/inputs
 */
export const StoryPromptSchema = z.object({
  prompt: z.string().describe('The creative writing prompt or seed idea'),
  preferredGenre: z.string().optional().describe('Optional preferred genre'),
  targetLength: z
    .enum(['short', 'medium', 'long'])
    .default('medium')
    .describe('Target story length'),
  mood: z.string().optional().describe('Desired mood or atmosphere'),
});

export type StoryPrompt = z.infer<typeof StoryPromptSchema>;
